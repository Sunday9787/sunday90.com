import{_ as s,o as a,c as p,a as t,e,f as o}from"./app-CxMWSuJm.js";const c={};function l(i,n){return a(),p("div",null,[n[0]||(n[0]=t("p",null,"辅助线听起来高大上，其实就那么回事儿😝",-1)),e(" more "),n[1]||(n[1]=o(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>这个功能的思路几乎没有经过深思熟虑，就自然地顺畅地出来了，思维像源泉一样不断涌现，是我最得意的功能。</p><h2 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h2><p>当控件移动的时候，监听其位置，跟其他控件的水平和垂直对应的边上的每一个控制点的x&amp;y都做一个比较，也就是</p><p><code>left</code> vs <code>left</code></p><p><code>left</code> vs <code>right</code></p><p><code>right</code> vs <code>right</code></p><p><code>top</code> vs <code>top</code></p><p><code>top</code> vs <code>bottom</code></p><p><code>top</code> vs <code>center</code></p><p><code>bottom</code> vs <code>bottom</code></p><p><code>bottom</code> vs <code>center</code></p><p><code>bottom</code> vs <code>top</code></p><p>等等... （实际代码里我没有举例完）</p><p>跟其他控件的这些边都做一个比较，如果差值在5像素范围，那么就显示此辅助线，并将辅助线x，y更新。</p><h2 id="设计" tabindex="-1"><a class="header-anchor" href="#设计" aria-hidden="true">#</a> 设计</h2><p><strong>辅助线</strong></p><p>辅助线只是一个展示，仅仅需要控制其 <code>visible</code> <code>x,y</code> 即可，我们可以根据控件定义6个辅助线分别是</p><p>yl =&gt; 纵轴左边</p><p>yc =&gt; 纵轴中间</p><p>yr =&gt; 纵轴右边</p><p>xt =&gt; 横轴上边</p><p>xc =&gt; 横轴中间</p><p>Xb =&gt; 横轴下边</p><p>当然其实定义2条线其实也是可以的，这里我为了更清楚的去显示辅助线所以使用了6条线</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
   * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Ref<span class="token punctuation">&lt;</span>Array<span class="token punctuation">&lt;</span><span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">&#39;yl&#39;</span><span class="token operator">|</span><span class="token string">&#39;yc&#39;</span><span class="token operator">|</span><span class="token string">&#39;yr&#39;</span><span class="token operator">|</span><span class="token string">&#39;xt&#39;</span><span class="token operator">|</span><span class="token string">&#39;xc&#39;</span><span class="token operator">|</span><span class="token string">&#39;xb&#39;</span><span class="token punctuation">,</span>direction<span class="token operator">:</span> string<span class="token punctuation">,</span> visible<span class="token operator">:</span> boolean<span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">{</span>left<span class="token operator">:</span> number<span class="token punctuation">,</span> top<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
   */</span>
<span class="token keyword">const</span> markLine <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;yl&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;vertical&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;yc&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;vertical&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;yr&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;vertical&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;xt&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;xc&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;xb&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="视图" tabindex="-1"><a class="header-anchor" href="#视图" aria-hidden="true">#</a> 视图</h2><h3 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pug<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
svg.template-mark-line(
  xmlns=&quot;http://www.w3.org/2000/svg&quot;
  :width=&quot;size.width&quot;
  :height=&quot;size.height&quot;
  :style=&quot;wrapperStyle&quot;
  :class=&quot;{visible}&quot;)
  line(stroke=&quot;var(--color-primary)&quot; x1=&quot;0&quot; y1=&quot;0&quot; :x2=&quot;size.width&quot; :y2=&quot;size.height&quot;)
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
TemplateMarkLine(v-for=&quot;item of markLine&quot;
  :key=&quot;item.type&quot;
  :position=&quot;item.position&quot;
  :direction=&quot;item.direction&quot;
  :visible=&quot;item.visible&quot;)
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;TemplateMarkLine&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">visible</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
    <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Type</th><th>说明</th></tr></thead><tbody><tr><td><code>direction</code></td><td>\`&quot;horizontal&quot;</td><td>&quot;vertical&quot;\`</td></tr><tr><td><code>position</code></td><td><code>{x: Number, y: Number}</code></td><td>位置</td></tr></tbody></table><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><h3 id="边界判定" tabindex="-1"><a class="header-anchor" href="#边界判定" aria-hidden="true">#</a> 边界判定</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">dragValue</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">targetValue</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">isNearly</span><span class="token punctuation">(</span><span class="token parameter">dragValue<span class="token punctuation">,</span> targetValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>dragValue <span class="token operator">-</span> targetValue<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此函数 只是判断多少距离是到达边界值</p><h3 id="对比条件" tabindex="-1"><a class="header-anchor" href="#对比条件" aria-hidden="true">#</a> 对比条件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Record<span class="token punctuation">&lt;</span>string<span class="token punctuation">,</span> <span class="token punctuation">(</span>rect1<span class="token operator">:</span> Template<span class="token punctuation">.</span>Rect<span class="token punctuation">,</span> rect2<span class="token operator">:</span> Template<span class="token punctuation">.</span>Rect<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>visible<span class="token operator">:</span> boolean<span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">{</span>left<span class="token operator">:</span> number<span class="token punctuation">,</span> top<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">}</span>&gt;<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">const</span> conditions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">yl</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ll <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>left<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> lr <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>left<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ll<span class="token punctuation">.</span>visible <span class="token operator">?</span> ll <span class="token operator">:</span> lr
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">yc</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>right <span class="token operator">-</span> rect1<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>right <span class="token operator">-</span> rect2<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>right <span class="token operator">-</span> rect2<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">yr</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rr <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>right<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> rl <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>right<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> rr<span class="token punctuation">.</span>visible <span class="token operator">?</span> rr <span class="token operator">:</span> rl
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">xt</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> tt <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>top<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>top <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> tb <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>top<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>bottom <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> tt<span class="token punctuation">.</span>visible <span class="token operator">?</span> tt <span class="token operator">:</span> tb
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">xc</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>bottom <span class="token operator">-</span> rect1<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>bottom <span class="token operator">-</span> rect2<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>bottom <span class="token operator">-</span> rect2<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">xb</span><span class="token punctuation">(</span><span class="token parameter">rect1<span class="token punctuation">,</span> rect2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> bb <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>bottom <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> bt <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token function">isNearly</span><span class="token punctuation">(</span>rect1<span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> rect2<span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">top</span><span class="token operator">:</span> rect2<span class="token punctuation">.</span>top <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> bb<span class="token punctuation">.</span>visible <span class="token operator">?</span> bb <span class="token operator">:</span> bt
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义了各个边的对比，其实很简单，就是 两个点的距离计算比较</p><h2 id="遍历对比" tabindex="-1"><a class="header-anchor" href="#遍历对比" aria-hidden="true">#</a> 遍历对比</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
  * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Template<span class="token punctuation">.</span>Event<span class="token punctuation">&lt;</span>Template<span class="token punctuation">.</span>BuiltinComponent<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> <span class="token parameter">e</span>
  */</span>
<span class="token keyword">const</span> <span class="token function-variable function">moveHandle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> currentComponent <span class="token operator">=</span> e<span class="token punctuation">.</span>detail
  <span class="token comment">// 获得当前控件 rect</span>
  <span class="token keyword">const</span> currentRect <span class="token operator">=</span> <span class="token function">getRect</span><span class="token punctuation">(</span>currentComponent<span class="token punctuation">)</span>

  <span class="token comment">// 遍历所有控件</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> item<span class="token punctuation">]</span> <span class="token keyword">of</span> store<span class="token punctuation">.</span>components<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果当前控件是自己则跳过</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> currentComponent<span class="token punctuation">.</span>uid<span class="token punctuation">)</span> <span class="token keyword">continue</span>

    <span class="token comment">// 获取控件 rect</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token function">getRect</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>

    <span class="token comment">// 成立条件数量</span>
    <span class="token keyword">let</span> condition <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token comment">// 所有条件进行一次执行</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> line <span class="token keyword">of</span> markLine<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> visible<span class="token punctuation">,</span> position <span class="token punctuation">}</span> <span class="token operator">=</span> conditions<span class="token punctuation">[</span>line<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>currentRect<span class="token punctuation">,</span> rect<span class="token punctuation">]</span><span class="token punctuation">)</span>
      line<span class="token punctuation">.</span>visible <span class="token operator">=</span> visible
      line<span class="token punctuation">.</span>position <span class="token operator">=</span> position

      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        condition <span class="token operator">+=</span> <span class="token number">1</span>

        <span class="token doc-comment comment">/**
          * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">[</span>number<span class="token punctuation">,</span> number<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
          */</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
          position<span class="token punctuation">.</span>left <span class="token operator">||</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x<span class="token punctuation">,</span>
          position<span class="token punctuation">.</span>top <span class="token operator">||</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y
        <span class="token punctuation">]</span>

        <span class="token comment">// 这一步是为了 让组件有个吸附效果</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&#39;xt&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;xc&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">-</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">2</span>
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;xb&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">-</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>h
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;yc&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">-</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>w <span class="token operator">/</span> <span class="token number">2</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;yl&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y
            <span class="token keyword">break</span>
          <span class="token keyword">case</span> <span class="token string">&#39;yr&#39;</span><span class="token operator">:</span>
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">-</span> currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>w
            currentComponent<span class="token punctuation">.</span>props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 如果有一个条件成立 则取消遍历</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><figure><img src="https://static-1256180570.cos.ap-nanjing.myqcloud.com/image/1731492501.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,45))])}const u=s(c,[["render",l],["__file","template_editor_markline.html.vue"]]);export{u as default};
