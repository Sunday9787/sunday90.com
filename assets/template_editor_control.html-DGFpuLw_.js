import{_ as s,o as a,c as t,a as p,e,f as o}from"./app-DksFnYym.js";const c={};function l(i,n){return a(),t("div",null,[n[0]||(n[0]=p("p",null,"编辑器没了它 组件就不可能随意在画布上拖动，就像是 鱼儿不能离开水，鸟儿需要天空，星星需要夜空...",-1)),e(" more "),n[1]||(n[1]=o(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>写这个控件真的老费劲了，尤其是 scale 变量的加入，很绕🙃。如果你看懂了，那你一也可以像我一样强😎</p><h2 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h2><p>控件的设计主要分为两部分</p><ol><li>监听鼠标拖动控制组件位置，且画布缩放时能移动到正确的位置</li><li>控件的八个控制点，从而调整组件尺寸大小</li></ol><h2 id="视图" tabindex="-1"><a class="header-anchor" href="#视图" aria-hidden="true">#</a> 视图</h2><p>视图部分很简单，组件套进容器即可，没有别的东西，同时需要绘制出八个控制点</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pug<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
.template-control(
  :class=&quot;{ visible, lock }&quot;
  :style=&quot;wrapperStyle&quot;
  @pointerdown.stop=&quot;onPointerdown&quot;)
  div.template-control-mask
  i.template-control-point.top-left(@pointerdown.stop=&quot;onControlPointerdown(&#39;topLeft&#39;, $event)&quot;)
  i.template-control-point.top-center(@pointerdown.stop=&quot;onControlPointerdown(&#39;topCenter&#39;, $event)&quot;)
  i.template-control-point.top-right(@pointerdown.stop=&quot;onControlPointerdown(&#39;topRight&#39;, $event)&quot;)
  i.template-control-point.center-left(@pointerdown.stop=&quot;onControlPointerdown(&#39;centerLeft&#39;, $event)&quot;)
  i.template-control-point.center-right(@pointerdown.stop=&quot;onControlPointerdown(&#39;centerRight&#39;, $event)&quot;)
  i.template-control-point.bottom-left(@pointerdown.stop=&quot;onControlPointerdown(&#39;bottomLeft&#39;, $event)&quot;)
  i.template-control-point.bottom-center(@pointerdown.stop=&quot;onControlPointerdown(&#39;bottomCenter&#39;, $event)&quot;)
  i.template-control-point.bottom-right(@pointerdown.stop=&quot;onControlPointerdown(&#39;bottomRight&#39;, $event)&quot;)
  slot
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>样式就不贴了，具体看仓库具体代码</em></p><p><em>这里事件都添加了阻止事件继续冒泡，主要是为了，不跟上面的编辑器产生影响</em></p><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;TemplateControl&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stageInstance&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">zIndex</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">scale</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lock</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Type</th><th>说明</th></tr></thead><tbody><tr><td><code>stageInstance</code></td><td>Vue</td><td>画布的实例</td></tr><tr><td><code>zIndex</code></td><td>Number</td><td>组件的层级</td></tr><tr><td><code>scale</code></td><td>Number</td><td>画布的缩放等级 10-100</td></tr><tr><td><code>position</code></td><td>{x: Number,y: Number}</td><td>组件的位置</td></tr><tr><td><code>size</code></td><td>{w: Number,x: Number}</td><td>组件的尺寸</td></tr><tr><td><code>value</code></td><td>Boolean</td><td>组 组件是否显示控制点</td></tr><tr><td><code>lock</code></td><td>Boolean</td><td>组件是否锁定</td></tr></tbody></table><h2 id="缩放移动" tabindex="-1"><a class="header-anchor" href="#缩放移动" aria-hidden="true">#</a> 缩放移动</h2><p>原理：</p><p>鼠标按下时暂存当前位置，新的位置 - 暂存位置则就是移动的距离</p><p><em>但是 因为 画布有个 scale 缩放变量，所以 又增加了一点难度。</em></p><h3 id="公式" tabindex="-1"><a class="header-anchor" href="#公式" aria-hidden="true">#</a> 公式</h3><p>暂存的pageX = 当前鼠标的pageX - 当前组件的offsetLeft * scale</p><blockquote><p>解释：</p><p>当前鼠标的pageX 是一个常量 跟 scale 没有关系，当前组件因为在画布内，缩放则是缩放整个画布，所以，实际视图上的 offset = offset * sclae</p></blockquote><p>所以:</p><p>x = 当前鼠标的pageX - 暂存的pageX</p><p>y = 当前鼠标的pageY - 暂存的pageY</p><h3 id="限制范围" tabindex="-1"><a class="header-anchor" href="#限制范围" aria-hidden="true">#</a> 限制范围</h3><p>初始化位置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">.</span>x
<span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">.</span>y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当前鼠标位置 - 暂存位置 = 移动的距离</p><h4 id="限制最左边" tabindex="-1"><a class="header-anchor" href="#限制最左边" aria-hidden="true">#</a> 限制最左边</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 左边限制
 */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> x <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>暂存的X不能 &lt; 0 否则在画布外了</p><h4 id="限制最右边" tabindex="-1"><a class="header-anchor" href="#限制最右边" aria-hidden="true">#</a> 限制最右边</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 右边限制
 */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> initSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  x <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> initSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token operator">*</span> scale
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>解释：</p><p><code>vm.stageInstance.$el.clientWidth</code> 是 画布的可视区宽度（不包含画布边距），如果使用 <code>offsetWidth</code> 则需要计算边距的值减去比较麻烦</p><p><code>initSize.w</code> 是 控件首次渲染的宽度</p><p>上述两个变量是始终不会随着缩放变的，但是<strong>鼠标 pageX/Y 的位置会随着 scale 变化而变化，因为画布缩放后原素自然不会在原来屏幕上的位置</strong></p></blockquote><p>所以:</p><p>(vm.stageInstance.$el.clientWidth - initSize.w) * scale 就是鼠标X最大值</p><h4 id="限制最上边" tabindex="-1"><a class="header-anchor" href="#限制最上边" aria-hidden="true">#</a> 限制最上边</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 上边限制
 */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> y <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="限制最下边" tabindex="-1"><a class="header-anchor" href="#限制最下边" aria-hidden="true">#</a> 限制最下边</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 下边限制
 */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> initSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  y <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> initSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token operator">*</span> scale
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下边跟限制右边同理</p></blockquote><h3 id="更新位置" tabindex="-1"><a class="header-anchor" href="#更新位置" aria-hidden="true">#</a> 更新位置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>data<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> scale
data<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> scale
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>解释：</p><p>这一步非常非常重要！！！</p><p>因为目前得到的值都是缩放后的值，所以需要 / scale 还原为真实值（这里你肯定会想不明白，没关系，你好好想，手动滑稽）</p></blockquote><p>完整代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>proxy
<span class="token keyword">const</span> visible <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> props<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> multiple <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
* 指针点击类型 - 控制方向类型/null
*/</span>
<span class="token keyword">const</span> pointType <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
* 实际显示 定位 &amp; 宽度
* <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>x<span class="token operator">:</span> number<span class="token punctuation">,</span> y<span class="token operator">:</span> number<span class="token punctuation">,</span> h<span class="token operator">:</span> number<span class="token punctuation">,</span> w<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
*/</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> props<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>h<span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> props<span class="token punctuation">.</span>size<span class="token punctuation">.</span>w <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
* 暂存拖动位置 pageX/pageY
*/</span>
<span class="token keyword">const</span> stashPosition <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
* 初始控件大小
* 每次拖动后需更新此值
*/</span>
<span class="token keyword">const</span> initSize <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
* 最小控件大小
*/</span>
<span class="token keyword">const</span> miniSize <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> offset <span class="token operator">=</span> <span class="token function">useBorderSize</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">)</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>PointerEvent<span class="token punctuation">}</span></span> <span class="token parameter">e</span>
*/</span>
<span class="token keyword">const</span> <span class="token function-variable function">onPointerdown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> scale <span class="token operator">=</span> props<span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>

  visible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
  pointType<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>
  stashPosition<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft <span class="token operator">*</span> scale<span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale
  <span class="token punctuation">}</span>

  context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
  context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;moveStart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> data<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> data<span class="token punctuation">.</span>y <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>PointerEvent<span class="token punctuation">}</span></span> <span class="token parameter">e</span>
*/</span>
<span class="token keyword">const</span> <span class="token function-variable function">onPointermove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>lock<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> props<span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pointType<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      onPointermoveHandle<span class="token punctuation">[</span>pointType<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> e<span class="token punctuation">)</span>

      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:position&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> data<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> data<span class="token punctuation">.</span>y <span class="token punctuation">}</span><span class="token punctuation">)</span>
      context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:size&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> data<span class="token punctuation">.</span>w<span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> data<span class="token punctuation">.</span>h <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">.</span>x
    <span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">.</span>y

    <span class="token doc-comment comment">/**
    * 左边限制
    */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> x <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token doc-comment comment">/**
    * 上边限制
    */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> y <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token doc-comment comment">/**
    * 右边限制
    */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> initSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      x <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> initSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
    * 下边限制
    */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> initSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      y <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> initSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    data<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> scale
    data<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> scale

    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:position&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> data<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> data<span class="token punctuation">.</span>y <span class="token punctuation">}</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;move&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> data<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> data<span class="token punctuation">.</span>y <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>PointerEvent<span class="token punctuation">}</span></span> <span class="token parameter">e</span>
*/</span>
<span class="token keyword">const</span> <span class="token function-variable function">onPointerup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>stashPosition<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    stashPosition<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>
    pointType<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>
    initSize<span class="token punctuation">.</span>w <span class="token operator">=</span> data<span class="token punctuation">.</span>w
    initSize<span class="token punctuation">.</span>h <span class="token operator">=</span> data<span class="token punctuation">.</span>h

    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;moveEnd&#39;</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;resizeEnd&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>PointerEvent<span class="token punctuation">}</span></span> <span class="token parameter">e</span>
*/</span>
<span class="token keyword">const</span> <span class="token function-variable function">onBodyPointerdown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  visible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span>w <span class="token operator">=</span> initSize<span class="token punctuation">.</span>w <span class="token operator">=</span> miniSize<span class="token punctuation">.</span>w <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetWidth
    data<span class="token punctuation">.</span>h <span class="token operator">=</span> initSize<span class="token punctuation">.</span>h <span class="token operator">=</span> miniSize<span class="token punctuation">.</span>h <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetHeight
    context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:size&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> data<span class="token punctuation">.</span>w<span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> data<span class="token punctuation">.</span>h <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointerdown&#39;</span><span class="token punctuation">,</span> onBodyPointerdown<span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointermove&#39;</span><span class="token punctuation">,</span> onPointermove<span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointerup&#39;</span><span class="token punctuation">,</span> onPointerup<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointerdown&#39;</span><span class="token punctuation">,</span> onBodyPointerdown<span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointermove&#39;</span><span class="token punctuation">,</span> onPointermove<span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointerup&#39;</span><span class="token punctuation">,</span> onPointerup<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="控制点移动" tabindex="-1"><a class="header-anchor" href="#控制点移动" aria-hidden="true">#</a> 控制点移动</h2><p>前面缩放移动如果能理解，那么，控制点的实现你肯定能一看就会</p><h3 id="公式-1" tabindex="-1"><a class="header-anchor" href="#公式-1" aria-hidden="true">#</a> 公式</h3><p>同上👆</p><h3 id="设计" tabindex="-1"><a class="header-anchor" href="#设计" aria-hidden="true">#</a> 设计</h3><p>因为是八个控制点，且都要单独去暂存位置，和更新位置所以可以这样设计。给控制点命名</p><p>topLeft</p><p>topCenter</p><p>topRight</p><p>centerLeft</p><p>centerRight</p><p>bottomLeft</p><p>bottomCenter</p><p>bottomRight</p><p>所以当绑定的控制点鼠标按下时执行对应函数即可（策略模式）</p><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h3><p><code>pointType</code>变量记录指针类型</p><p><code>onPointeDownHandle</code>&amp;<code>onPointermoveHandle</code>分别执行对应的事件处理函数</p><h4 id="控制点按下" tabindex="-1"><a class="header-anchor" href="#控制点按下" aria-hidden="true">#</a> 控制点按下</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">onControlPointerdown</span><span class="token punctuation">(</span><span class="token parameter">pointType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>pointType <span class="token operator">=</span> pointType
  onPointeDownHandle<span class="token punctuation">[</span>pointType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;resizeStart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w<span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>onPointeDownHandle</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Record<span class="token punctuation">&lt;</span>string<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> Vue<span class="token punctuation">,</span> e<span class="token operator">:</span> PointerEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">const</span> onPointeDownHandle <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">topLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">topCenter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">topRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">centerLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">centerRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetHeight <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomCenter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetHeight <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetWidth <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>left<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetHeight <span class="token operator">*</span> scale <span class="token operator">+</span> rect<span class="token punctuation">.</span>top
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>onPointermoveHandle</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Record<span class="token punctuation">&lt;</span>string<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> Vue<span class="token punctuation">,</span> e<span class="token operator">:</span> PointerEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">const</span> onPointermoveHandle <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">topLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>h <span class="token operator">*</span> scale
      <span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>w <span class="token operator">*</span> scale

      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">-</span> x <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        y <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">-</span> y <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h
      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">topCenter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>h <span class="token operator">*</span> scale

      <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        y <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">-</span> y <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">topRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span>

      <span class="token doc-comment comment">/**
       * 左边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token doc-comment comment">/**
       * 右边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft <span class="token operator">*</span> scale <span class="token operator">+</span> w <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w <span class="token operator">/</span> scale

      <span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>h <span class="token operator">*</span> scale

      <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        y <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">-</span> y <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">centerLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>w <span class="token operator">*</span> scale

      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">-</span> x <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">centerRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span>

      <span class="token doc-comment comment">/**
       * 左边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token doc-comment comment">/**
       * 右边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft <span class="token operator">*</span> scale <span class="token operator">+</span> w <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w <span class="token operator">/</span> scale
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomLeft</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offset<span class="token punctuation">.</span>w <span class="token operator">*</span> scale
      <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

      <span class="token doc-comment comment">/**
       * 上边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token doc-comment comment">/**
       * 下边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale <span class="token operator">+</span> h <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> scale <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h <span class="token operator">/</span> scale

      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">-</span> x <span class="token operator">/</span> scale<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomCenter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
      <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

      <span class="token doc-comment comment">/**
       * 上边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token doc-comment comment">/**
       * 下边限制
       */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale <span class="token operator">+</span> h <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> scale <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h <span class="token operator">/</span> scale
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">bottomRight</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scale <span class="token operator">/</span> <span class="token number">100</span>
    <span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
    <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stashPosition<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

    <span class="token doc-comment comment">/**
     * 左边限制
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      w <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>w <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 上边限制
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>miniSize<span class="token punctuation">.</span>h <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 右边限制
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft <span class="token operator">*</span> scale <span class="token operator">+</span> w <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      w <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientWidth <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 下边限制
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop <span class="token operator">*</span> scale <span class="token operator">+</span> h <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      h <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stageInstance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span> <span class="token operator">*</span> scale
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>w <span class="token operator">=</span> w <span class="token operator">/</span> scale
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>h <span class="token operator">=</span> h <span class="token operator">/</span> scale
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><p>希望你可以理解 scale 跟 client offset rect 各种关系</p><figure><img src="https://static-1256180570.cos.ap-nanjing.myqcloud.com/image/1730428440.png?imageMogr2/interlace/1/quality/100/thumbnail/500x" alt="E7F692D428BD1D78B21E2751F013C795" tabindex="0" loading="lazy"><figcaption>E7F692D428BD1D78B21E2751F013C795</figcaption></figure>`,72))])}const r=s(c,[["render",l],["__file","template_editor_control.html.vue"]]);export{r as default};
