import{_ as i,r as o,o as l,c as u,a as s,e as r,f as a,b as p,d as t}from"./app-DksFnYym.js";const k={},d={class:"footnotes"},v={class:"footnotes-list"},m={id:"footnote1",class:"footnote-item"},b={href:"https://router.vuejs.org/zh/api/interfaces/RouterOptions.html#Properties-routes",target:"_blank",rel:"noopener noreferrer"};function g(y,n){const e=o("FlowChart"),c=o("ExternalLinkIcon");return l(),u("div",null,[n[5]||(n[5]=s("p",null,"最近群里在问权限应该怎么设计，用什么方案合适。说实话我很早前第一次做权限的时候也栽进坑里过",-1)),r(" more "),n[6]||(n[6]=a('<h2 id="权限方案" tabindex="-1"><a class="header-anchor" href="#权限方案" aria-hidden="true">#</a> 权限方案</h2><p>权限无非就是限制 页面的展示 或则 某个组件的展示，总结下来就是 :</p><ul><li><code>C</code> 创建</li><li><code>U</code> 更新(编辑)</li><li><code>R</code> 读取(查询)</li><li><code>D</code> 删除</li></ul><p><code>C</code> 数据是否可以被创建，限制初始化某功能（权限独立）</p><p><code>R</code> 数据是否可以被查询，限制页面 or 组件查看（权限独立）</p><p><code>U</code> 数据是否可以被更新，限制数据更新，可查询数据 （联合权限<code>R</code>）</p><p><code>D</code> 数据是否可以被删除，限制数据删除，可查询可更新（联合权限<code>R</code> <code>U</code>）</p><p>上述是后端数据权限总结</p><p>目前我已知前端方案有:</p><h3 id="动态路由" tabindex="-1"><a class="header-anchor" href="#动态路由" aria-hidden="true">#</a> 动态路由</h3><p>菜单 页面 单独存放，请求后端返回 router 配置信息登录时 一次性生成route配置 addRoute，登出时重置为默认 router</p><p>技术细节：</p>',12)),p(e,{id:"flowchart-59",code:"eJzLyU/3zLO1Ky5JLCqxUng+ZcWzju3PZ+5+uncqF1DKv7TE1i6/ILUosSQzPw9Zvn0XV0ZicUBqUW5mcTFQziWxJNHWLjk/LyUTovTZjPVPJyx7un3Ti77tT/unPZvb/HLmhJetvc/3ruMCGgjVhqIFi0quovzSklQ0N8x/1jHhxfb1z6ds5CrLTC1HkX25cOvLuYu4UvNSbO2ABFD57snP5s7nAvnGM0/XDsPRmN7QqEwt1knKLynJz9XUtQM7AIuivHygJMIjXEiewmYAkixYJ9BtUM/p2oE8oWsHCW6IDACBGrM8",preset:"prest"}),n[7]||(n[7]=a(`<p>首先</p><p>动态生成路由 比较麻烦</p><p>路由书写不能像官网示例那样 一个一个 import(&#39;xxx&#39;)，需要动态遍历组合生成路由</p><p><em>仅供参考:</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">/* 权限数据结构 */</span>
<span class="token keyword">interface</span> <span class="token class-name">Permission</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span>
    parentId<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span>
    path<span class="token operator">:</span> <span class="token builtin">string</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token doc-comment comment">/**
     * 组件名称
     * 组件具体的路径
     * <span class="token keyword">@example</span> \`component = &#39;product/detail.vue&#39;\` \`src/views/$<span class="token punctuation">{</span>component<span class="token punctuation">}</span>\`
     */</span>
    component<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">PermissionRoute</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span>
    parentId<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span>
    parentName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    route<span class="token operator">:</span> RouteRecordRaw
<span class="token punctuation">}</span>

<span class="token keyword">const</span> permissionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> Permission<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>permission<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createRoute</span><span class="token punctuation">(</span>permission<span class="token operator">:</span> Permission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> asyncRoute<span class="token operator">:</span> PermissionRoute <span class="token operator">=</span> <span class="token punctuation">{</span>
         id<span class="token operator">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
         parentId<span class="token operator">:</span> item<span class="token punctuation">.</span>parentId<span class="token punctuation">,</span>
         parentName<span class="token operator">:</span> permissionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token operator">?.</span>name<span class="token punctuation">,</span>
         route<span class="token operator">:</span> <span class="token punctuation">{</span>
             name<span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
             redirect<span class="token operator">:</span> item<span class="token punctuation">.</span>redirect<span class="token punctuation">,</span>
             path<span class="token operator">:</span> item<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
             <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">return</span> asyncRoute
<span class="token punctuation">}</span>

<span class="token keyword">const</span> routers <span class="token operator">=</span> <span class="token punctuation">[</span>
     <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/403&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Qianli403&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">403</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> component<span class="token operator">:</span> ErrorView <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Qianli404&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">404</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> component<span class="token operator">:</span> ErrorView <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/:catchAll(.*)&#39;</span><span class="token punctuation">,</span> redirect<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">generateRoute</span><span class="token punctuation">(</span>permission<span class="token operator">:</span> Permission<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> router<span class="token operator">:</span> Router<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> asyncRouters <span class="token operator">=</span> permission<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>createRoute<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>asyncRoute <span class="token keyword">of</span> asyncRouters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>asyncRoute<span class="token punctuation">.</span>parentName<span class="token punctuation">,</span> asyncRoute<span class="token punctuation">.</span>route<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>route <span class="token keyword">of</span> routers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
     routes<span class="token operator">:</span> <span class="token punctuation">[</span>
         <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;QianliRoot&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> redirect<span class="token operator">:</span> <span class="token string">&#39;/dashboard/workplace&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
         <span class="token punctuation">{</span>
             path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
             name<span class="token operator">:</span> <span class="token string">&#39;QianliLogin&#39;</span><span class="token punctuation">,</span>
             meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">&#39;登录&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token function-variable function">props</span><span class="token operator">:</span> route <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> redirect<span class="token operator">:</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>redirect <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
             <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/index.vue&#39;</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">]</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次</p><p>props 问题：</p><p>我们可以看到 ，手动组合 route 配置，且 props 没办法 手动指定，只能 props: true，这样是能解决问题 但是，对于一个健壮的项目来讲 这种 是不可取的</p><p>再者 meta 问题：</p><p>meta 通常会存一些跟页面相关的数据，难道这部分数据也要配置在后台？</p><p>解决办法：</p><p>当然上述说的 props 和 meta 问题可以解决，但是比较麻烦。需要在本地 有个配置做关联，生成路由时挂进去即可</p><p>但是挺费劲的</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">RouteConfig</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>RouteRecordRaw<span class="token punctuation">,</span><span class="token string">&#39;component&#39;</span><span class="token operator">|</span><span class="token string">&#39;path&#39;</span><span class="token operator">|</span><span class="token string">&#39;name&#39;</span><span class="token operator">&gt;</span>

<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">props</span><span class="token operator">:</span> <span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span>title<span class="token operator">:</span> <span class="token string">&#39;xxxx&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> route
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染菜单</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PermissionMenu</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span>
    path<span class="token operator">:</span> <span class="token builtin">string</span>
    children<span class="token operator">:</span> PermissionMenu<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 router.options.routes <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> 获取 整个 router 配置树</p><p>写个递归组件渲染即可不再赘述</p><h3 id="路由钩子" tabindex="-1"><a class="header-anchor" href="#路由钩子" aria-hidden="true">#</a> 路由钩子</h3><p>菜单 = 页面 不需要配置多份数据 静态路由，路由 name 作为权限码（name必须唯一）登录时返回用户权限列表，每次在 <code>router.beforeEach</code> 时 判断权限 做鉴权跳转</p><h4 id="权限命名规范" tabindex="-1"><a class="header-anchor" href="#权限命名规范" aria-hidden="true">#</a> 权限命名规范</h4><p>路由 name 名称 采用 <code>帕斯卡</code> 命名法</p><p>模块</p><p><code>Product</code></p><p>模块-&gt;页面</p><p><code>ProductDetail</code></p><p>prefix-&gt;模块-&gt;页面-&gt;按钮功能</p><p><code>btn_ProductDetail_submit</code></p><p>考虑到方便 cv 页面权限名称，故采用 <code>下划线 + 帕斯卡 + 下划线</code> 命名法</p><h4 id="技术细节" tabindex="-1"><a class="header-anchor" href="#技术细节" aria-hidden="true">#</a> 技术细节</h4>`,30)),p(e,{id:"flowchart-144",code:"eJzLyU/3zLO1Ky5JLCqxUng+ZcWzju3PZ+5+uncqF1DKv7TE1i6/ILUosSQzPw9Zvn0XV0ZicUBqUW5mcTFQziWxJNHWLjk/LyUTovTZjPVPJyx7un3Ti77tT/unPZvb/HLmhJetvc/3ruMCGgjVhqIFi8qi/NKSVBQnvNi+/vmUjc+6lz3rWPV+T0dSalp+UaprYnLG+z2dqE7C4pxnczohxnNxlWWmlqMY/HLh1pdzF4HFTQyMUaXae5+um/V0wkSgBFRZal6KrR2QAIbJ7snP5s7nAgWXZ56uHUaoYIaTRmVqsU5SfklJfq6mrh3Yi1gU5eUDJREhxYUUatgMQJIF6wS6jQsSfGhuQtUM8i52ZXn5OkWZ6RklUEVAr0MCTdcOkjAgVkClIBwAc0UAkQ==",preset:"prest"}),n[8]||(n[8]=a(`<p>首先</p><p>路由配置 官网示例怎么写就怎么写即可，不需要动态生成 router 配置</p><p><em>仅供参考:</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ./modules/user.ts</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> RouteRecordRaw <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;@/layout/index.vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SupervisedUserCircleRound <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vicons/material&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> userRoute<span class="token operator">:</span> RouteRecordRaw <span class="token operator">=</span> <span class="token punctuation">{</span>
  path<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;QianliUser&#39;</span><span class="token punctuation">,</span>
  component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>
  redirect<span class="token operator">:</span> <span class="token string">&#39;/user/list&#39;</span><span class="token punctuation">,</span>
  meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span> icon<span class="token operator">:</span> SupervisedUserCircleRound<span class="token punctuation">,</span> noShowingChildren<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      path<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&#39;QianliUserList&#39;</span><span class="token punctuation">,</span>
      meta<span class="token operator">:</span> <span class="token punctuation">{</span> activeMenu<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">&#39;用户列表&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/user/list/index.vue&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块化更清晰管理</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> ErrorView <span class="token keyword">from</span> <span class="token string">&#39;@/views/error/index.vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> dashboardRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/dashboard&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> userRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/user&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> postRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/post&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> productRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/product&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> systemRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/system&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> feedbackRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/feedback&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> jobRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/job&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> activityRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./modules/activity&#39;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  routes<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;QianliRoot&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> redirect<span class="token operator">:</span> <span class="token string">&#39;/dashboard/workplace&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&#39;QianliLogin&#39;</span><span class="token punctuation">,</span>
      meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">&#39;登录&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">props</span><span class="token operator">:</span> route <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> redirect<span class="token operator">:</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>redirect <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/index.vue&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    dashboardRoute<span class="token punctuation">,</span>
    postRoute<span class="token punctuation">,</span>
    productRoute<span class="token punctuation">,</span>
    feedbackRoute<span class="token punctuation">,</span>
    userRoute<span class="token punctuation">,</span>
    jobRoute<span class="token punctuation">,</span>
    activityRoute<span class="token punctuation">,</span>
    systemRoute<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/403&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Qianli403&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">403</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> component<span class="token operator">:</span> ErrorView <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Qianli404&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">404</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> component<span class="token operator">:</span> ErrorView <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/:catchAll(.*)&#39;</span><span class="token punctuation">,</span> redirect<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token punctuation">{</span> hidden<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次</p><p>鉴权函数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// utils/permission.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UserPower</span> <span class="token punctuation">{</span>
  web_route<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hasPermission</span><span class="token punctuation">(</span>permission<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> permissionPower<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>UserPower<span class="token operator">&gt;</span> <span class="token operator">=</span> whiteList<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>userModule<span class="token punctuation">.</span>user_power<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>permission<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>permissionPower<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>web_route <span class="token operator">===</span> permission<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>router拦截</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;.&#39;</span>
<span class="token keyword">import</span> NProgress <span class="token keyword">from</span> <span class="token string">&#39;nprogress&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;nprogress/nprogress.css&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> hasPermission<span class="token punctuation">,</span> userModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/modules/user&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> appModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/modules/app&#39;</span>

NProgress<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showSpinner<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> whiteList<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/403&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">]</span> <span class="token comment">// no redirect whitelist</span>

<span class="token doc-comment comment">/**
 * 首先判断是否有登录 没有登录 则 跳转到 登录页面
 * 有登录 判断是否已获取过权限列表 没有获取 则 等待获取
 * 判断 要去的路由是否是登录页面 是 则 重定向 /dashboard
 * 否则 判断要去的路由是否是白名单页面 是 则 放行
 * 否则 鉴权路由 通过 则 放行
 * 否则 重定向到 /403
 */</span>
router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> _<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> token <span class="token operator">=</span> appModule<span class="token punctuation">.</span>token

  <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 判断是否已获取过权限列表</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userModule<span class="token punctuation">.</span>dispatched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> userModule<span class="token punctuation">.</span><span class="token function">dispatchAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> userModule<span class="token punctuation">.</span><span class="token function">LogOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        appModule<span class="token punctuation">.</span><span class="token constant">REMOVE_TOKEN</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span> replace<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasPermission</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/403&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> redirect<span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath <span class="token punctuation">}</span><span class="token punctuation">,</span> replace<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后渲染 菜单</p><p>通过 router.options.routes <sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup> 获取 整个 router 配置树</p><p>写个递归组件渲染即可，是否渲染菜单 则需要通过 <code>hasPermission</code> 方法判断 当前 route.name (权限key) 具体代码不再赘述</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p><strong>动态路由：</strong></p><p>可以实现但是过程过于复杂，如果我更改了 组件目录 必须要同步更新到 后台，这种关联性太强了，<strong>强烈不推荐</strong>使用这种方式</p><p><strong>路由钩子：</strong></p><p>实现过程不复杂，简单、直接，主要在 router 拦截稍微绕了点总体还好 <strong>强烈推荐</strong>采用此方式</p><hr class="footnotes-sep">`,20)),s("section",d,[s("ol",v,[s("li",m,[s("p",null,[s("a",b,[n[0]||(n[0]=t("vue-router4")),p(c)]),n[1]||(n[1]=t()),n[2]||(n[2]=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1)),n[3]||(n[3]=t()),n[4]||(n[4]=s("a",{href:"#footnote-ref1:1",class:"footnote-backref"},"↩︎",-1))])])])])])}const w=i(k,[["render",g],["__file","permission.html.vue"]]);export{w as default};
